#!/usr/bin/env ruby -W0
load File.dirname(__FILE__) + '/utils.rb'

Benchmark.bm(50) do |b|

  ##
  # Callable
  #
  router = Hanami::Router.new
  app    = Rack::MockRequest.new(router)

  b.report 'generating named routes' do
    $named_routes.each do |(name, as)|
      router.get name, to: $endpoint, as: as
    end
  end

  b.report 'recognizing named routes' do
    TIMES.times do
      app.get($named_routes.sample.first)
    end
  end

  ##
  # Class
  #
  router = Hanami::Router.new
  app    = Rack::MockRequest.new(router)

  $named_routes.each do |(name, _)|
    eval "#{ Hanami::Utils::String.classify(name) } = Class.new($controller)"
  end

  b.report 'generating named routes (class endpoints)' do
    $named_routes.each do |(name, as)|
      router.get name, to: $endpoint, as: as
    end
  end

  b.report 'recognizing named routes (class endpoints)' do
    TIMES.times do
      app.get($named_routes.sample.first)
    end
  end

  ##
  # Lazy
  #
  router = Hanami::Router.new
  app    = Rack::MockRequest.new(router)

  $lazy = $lazy.map do |r|
    [r, r.to_sym]
  end

  b.report 'generating routes (lazy endpoints)' do
    $lazy.each do |(name, as)|
      router.get name, to: name, as: as
    end
  end

  $lazy.each do |(name, _)|
    eval "#{ Hanami::Utils::String.classify(name) } = Class.new($controller)"
  end

  b.report 'recognizing routes (lazy endpoints)' do
    TIMES.times do
      app.get($lazy.sample.first)
    end
  end
end

